{"ast":null,"code":"var _jsxFileName = \"/Users/bo-iliev/code/Projects/typing-test/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; // to calculate typing speed\n// words typed / minutes\n// words typed = (characters - typos) / 5\n\nconst secondsToCount = 10;\nconst paragraph = `Coding is the best. We are able to build something from scratch. It is literally imagination incarnate. Solving our own problems through coding is one of the coolest things we could do!`;\nexport default function App() {\n  const [typedText, setTypedText] = useState('');\n  console.log(paragraph.split(''));\n  console.log(typedText.split(''));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"00\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, paragraph.split('').map((character, index) => {\n    let characterClass = '';\n    const hasBeenTyped = typedText.length > index;\n\n    if (hasBeenTyped) {\n      let typo = false;\n      if (typo) characterClass = 'incorrect';\n      if (!typo) characterClass = 'correct';\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }\n      }, character);\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: typedText,\n    onChange: e => setTypedText(e.target.value),\n    rows: \"10\",\n    placeholder: \"Test your typing skills...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/bo-iliev/code/Projects/typing-test/src/App.js"],"names":["React","useState","secondsToCount","paragraph","App","typedText","setTypedText","console","log","split","map","character","index","characterClass","hasBeenTyped","length","typo","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,EAAvB;AACA,MAAMC,SAAS,GAAI,2LAAnB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACM,KAAV,CAAgB,EAAhB,CAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,KAAV,CAAgB,EAAhB,CAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAFF,eAQE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACM,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC7C,QAAIC,cAAc,GAAG,EAArB;AACA,UAAMC,YAAY,GAAGT,SAAS,CAACU,MAAV,GAAmBH,KAAxC;;AACA,QAAIE,YAAJ,EAAkB;AAChB,UAAIE,IAAI,GAAG,KAAX;AACA,UAAIA,IAAJ,EAAUH,cAAc,GAAG,WAAjB;AACV,UAAI,CAACG,IAAL,EAAWH,cAAc,GAAG,SAAjB;AACX,0BAAO;AAAM,QAAA,GAAG,EAAED,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,SAAnB,CAAP;AACD;AACF,GATA,CADH,CAFF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEN,SADT;AAEE,IAAA,QAAQ,EAAGY,CAAD,IAAOX,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAF/B;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,WAAW,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CARF,CADF;AAoCD","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// to calculate typing speed\n// words typed / minutes\n// words typed = (characters - typos) / 5\n\nconst secondsToCount = 10;\nconst paragraph = `Coding is the best. We are able to build something from scratch. It is literally imagination incarnate. Solving our own problems through coding is one of the coolest things we could do!`;\n\nexport default function App() {\n  const [typedText, setTypedText] = useState('');\n  console.log(paragraph.split(''));\n  console.log(typedText.split(''));\n  return (\n    <div className=\"app\">\n      {/* sidebar */}\n      <div className=\"sidebar\">\n        <div className=\"timer\">00</div>\n        <button className=\"start\">Start</button>\n        <button className=\"reset\">Reset</button>\n      </div>\n\n      <div className=\"content\">\n        {/* show the paragraph */}\n        <p>\n          {paragraph.split('').map((character, index) => {\n            let characterClass = '';\n            const hasBeenTyped = typedText.length > index;\n            if (hasBeenTyped) {\n              let typo = false;\n              if (typo) characterClass = 'incorrect';\n              if (!typo) characterClass = 'correct';\n              return <span key={index}>{character}</span>;\n            }\n          })}\n        </p>\n\n        {/* show the textarea */}\n        <form>\n          <textarea\n            value={typedText}\n            onChange={(e) => setTypedText(e.target.value)}\n            rows=\"10\"\n            placeholder=\"Test your typing skills...\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}